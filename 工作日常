jdk配置（Windows）
classpath
.;%java_home%\lib\dt.jar;%java_home%\lib\tools.jar
java_home
JDK安装路径
Path
%java_home%

配置环境变量：
vim /etc/profile

linux 配置java环境
vi /etc/profile
#set java environment
JAVA_HOME=/usr/local/jdk/jdk1.8.0_181
CLASSPATH=.:$JAVA_HOME/lib.tools.jar
PATH=$JAVA_HOME/bin:$PATH
export JAVA_HOME CLASSPATH PATH

本地仓库安装jar包（当中央仓库没有该jar依赖）(安装dubbo为例)
mvn install:install-file -Dfile=D:\qwe111\dubbo-2.8.4.jar -DgroupId=com.alibaba -DartifactId=dubbo -Dversion=2.8.4 -Dpackaging=jar
mvn install:install-file -DgroupId=org.csource.fastdfs -DartifactId=fastdfs  -Dversion=1.2 -Dpackaging=jar -Dfile=d:\temp\fastdfs_client_v1.20.jar

常用linux命令
vi /etc/hosts文件中加入ip地址和主机名的映射
组合键实现上一页和下一页：Shift + PageUp 和 Shift + PageDown

查询mysql的开启端口     ps -aux | grep mysql

卸载 自带安装的应用  rpm -e --nodeps +应用名

查询系统信息:
uname-a

查看系统位数:
getconf LONG_BIT

查询网络所有端口  netstat-a

在线联网安装
yum install ***  

开启eth0网卡
vi /etc/sysconfig/network-scripts/ifcfg-eth0
重启网络服务： /etc/init.d/network restart
查看应用安装的版本号： rpm -qa | grep java（以java为例）
查看防火墙状态       service iptables status
service --status-all    查看系统所有后台服务
service iptables stop 关闭防火墙
service iptables start 启动防火墙
chkconfig  iptables off 禁止防火墙自启
查看指定端口号：netstat -anp | grep 端口号

强制退出vivim
:q!

 ps -A 显示所有程序。
 ps -ef

查找文件
find /usr/local a.txt
删除文件 
rm -rf  ！！！ 慎用
文件目录重命名
mv  A B

对目录下文件进行授权
chmod -R 777 solrCloud

pgrep能查找当前正在运行的进程并列出符合条件的进程ID

cp 文件夹  指定位置 -r     递归移动文件夹


mysql数据库	
查看表结构
describe/desc 表名
备份数据库
mysqldump -u 登陆名 -p database table1 >文件名.sql
备份所有数据库
mysqldump -u 登录名 -p --all-database >文件名.sql
文件名前可以加文件绝对路径。
1.存储路径用char、varchar、text类型存储，
用“/”或者“\\”来替代路径中的“\”(D:\program files)
使用mysql命令导入数据:
mysql -u root -p [数据库名] <文件名；
root授权其他IP地址访问：
grant all privileges on *.* to 'root'@'%' identified by 'pwd' with grant option;
flush privileges;

mysql第一次安装完启动服务后 随机密码在日志中
grep 'password' /var/log/mysqld.log
更改用户的密码
对my.conf增加一行:skip-grant-tables
UPDATE mysql.user SET authentication_string=PASSWORD('123456') where User='root';

异常java.sql.SQLException: The server time zone value 'PDT' is unrecognized or represents more than one time zone.
解决方案:
在mysql中执行show variables like '%time_zone%';
输入select nows();
在终端执行date命令;问题所在:终端显示的时间和MySql中显示的时间不一致
在mysql中执行 set time_zone=SYSTEM;
执行 set global time_zone='+8:00';
flush privileges;


使用tomcat部署war项目（linux）
1.将项目发到   /usr/local/tomcat/apache-tomcat-7.0.57/webapps
2.在/usr/local/tomcat/apache-tomcat-7.0.57/bin目录下执行   ./startup.sh（注意防火墙）
3.查看目标 tomcat/logs/catalina.out
运行项目

MAVEN配置打包
<build>
        <!-- 指定JAVA源文件目录 -->
        <sourceDirectory>src</sourceDirectory>
        <!-- 配置资源文件-->
        <resources>
            <resource>
                <directory>src</directory>
                <includes>
                    <include>*/*.xml</include>
                    <include>*.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- 配置资源文件插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 配置编译插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 配置Jar打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <excludes>
                        <exclude>*/*.xml</exclude>
                        <exclude>*.properties</exclude>
                        <exclude>**/Test/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- 配置Jar打包源文件插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!--输出依赖的jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
</build>

