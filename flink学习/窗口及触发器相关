窗口计算是流式计算中非常常用的数据计算方式之一，通过按照固定时间或长度将数据流切分成不同的窗口，然后对数据进行相应的聚合运算，从而得到一定时间范围内的统计结果。
flink 中窗口的分类有几种：如分为Non-Keyed和Keyed Window；或者分为时间窗口和计数窗口
参考文章：https://blog.csdn.net/weixin_39868387/article/details/118460544


窗口的生命周期
窗口的生命周期，就是创建和销毁。
窗口的开始时间和结束时间是基于自然时间创建的，比如指定一个5s的窗口，那么1分钟内就会创建12个窗口。
什么时候窗口会被创建？当第一个元素进入到窗口开始时间的时候，这个窗口就被创建了。
什么时候窗口会被销毁？当时间（ProcessTime、EventTime或者 IngestionTime）越过了窗口的结束时间，再加上用户自定义的窗口延迟时间（allowed lateness），窗口就会被销毁。
举个例子来说，假设我们定义了一个基于事件时间的窗口，长度是5分钟，并且允许有1分钟的延迟。
当第一个元素包含了一个12:00的事件时间进来时，Flink会创建一个12:00 到 12:05 的窗口；在水位到 12:06 的时候，会销毁这个窗口。
每个窗口都会绑定一个触发器和一个执行函数。触发器定义了何时会触发窗口的执行函数的计算，比如在窗口元素数量大于等于4的时候，或者水位经过了窗口结束时间的时候。
另外，每个窗口可以指定 驱逐器（Evictor），它的作用是在触发器触发后，执行函数执行前，移除一些元素。

在窗口计算时，如何触发计算呢？
参考文章：
https://cloud.tencent.com/developer/article/1546892
https://blog.csdn.net/shirukai/article/details/117700828

flinkAPI 自带触发器有哪些呢？
CountTrigger	当窗口中的元素计数达到给定数量时触发的触发器
EventTimeTrigger	水印超高窗口结束时间时触发的触发器
ProcessingTimeTrigger	系统时间超过窗口结束时间时触发的触发器
ContinuousEventTimeTrigger	给定一个时间间隔，按照事件时间连续触发的触发器
ContinuousProcessTrigger	给定一个时间间隔，按照处理时间连续触发的触发器
PurgingTrigger	可以包装任何一个触发器，使其触发之后，清除窗口和状态
DeltaTrigger	指定一个DeltaFunction，和一个阈值，当计算出来的Delta值超出给定阈值时触发的触发器
