1.把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法。
题目:https://www.nowcoder.com/practice/bfd8234bb5e84be0b493656e390bdebf
import java.io.*;

public class Main {
    public static  void main(String[] args) throws Exception{
        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
        String str="";
        while((str=br.readLine())!=null){
            String[] arr=str.split(" ");
            int m=Integer.parseInt(arr[0]);
            int n=Integer.parseInt(arr[1]);
            System.out.println(count(m,n));

        }
    }

    public static int count(int m,int n){
        if(n==1||m==0) return 1;
        else if(n>m) return count(m,m);
        else return count(m,n-1)+count(m-n,n);
    }        
}


2.找出字符串中第一个只出现一次的字符
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 * @
 */
public class testDemo12 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String str = "";
        while ((str = br.readLine()) != null) {
            String s = "";
            char[] chars = str.toCharArray();
            int num[] = new int[128];
            for (int i = 0; i < str.length(); i++) {
                num[str.charAt(i)]++;
            }
            for (int i = 0; i < str.length(); i++) {
                if (num[chars[i]] == 1) {
                    System.out.println(chars[i]);
                    break;
                }
                if (i == str.length() - 1)
                    System.out.println(-1);
            }
        }
    }
}


